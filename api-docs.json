{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "jwtToken": []
    }
  ],
  "paths": {
    "/api/vault-management/vaults": {
      "get": {
        "tags": [
          "vault-controller"
        ],
        "summary": "Get all Vault - ADMIN",
        "description": "Get all vault ",
        "operationId": "getAllVaults",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VaultDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "vault-controller"
        ],
        "summary": "Update vault",
        "description": "Update vault by given data",
        "operationId": "updateVault",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VaultDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VaultDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "vault-controller"
        ],
        "summary": "Create vault ",
        "description": "Creation vault by given data",
        "operationId": "createVault",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VaultDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VaultDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/user-management/user": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Update user",
        "description": "Update a user",
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/third-party-management/third-parties": {
      "get": {
        "tags": [
          "third-party-controller"
        ],
        "summary": "Get all Third Parties",
        "description": "Get all Third Parties",
        "operationId": "getAllThirdParties",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThirdPartyDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "third-party-controller"
        ],
        "summary": "Update Third Party",
        "description": "Update a Third Party",
        "operationId": "updateThirdParty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThirdPartyDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdPartyDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "third-party-controller"
        ],
        "summary": "Create Third Party",
        "description": "Create a Third Party",
        "operationId": "createThirdParty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThirdPartyDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdPartyDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/revenue-management/revenues": {
      "get": {
        "tags": [
          "revenue-controller"
        ],
        "summary": "Get all Revenue",
        "description": "Get all Revenue",
        "operationId": "getAllRevenue",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RevenueDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "revenue-controller"
        ],
        "summary": "Update revenue",
        "description": "Update revenue by given data",
        "operationId": "updateRevenue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevenueDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "revenue-controller"
        ],
        "summary": "Create revenue",
        "description": "Creation revenue by given data",
        "operationId": "createRevenue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevenueDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/expense-management/expenses": {
      "get": {
        "tags": [
          "expense-controller"
        ],
        "summary": "Get all Expense",
        "description": "Get all Expense",
        "operationId": "getAllExpense",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpenseDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "expense-controller"
        ],
        "summary": "Update expense",
        "description": "Update expense by given data",
        "operationId": "updateExpense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "expense-controller"
        ],
        "summary": "Create expense",
        "description": "Creation expense by given data",
        "operationId": "createExpense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/category-management/categories": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "Get all Category",
        "description": "Get all Category ",
        "operationId": "getAllCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "category-controller"
        ],
        "summary": "Update category",
        "description": "Update category by given data",
        "operationId": "updateCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "category-controller"
        ],
        "summary": "Create category",
        "description": "Creation category by given data",
        "operationId": "createCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signUp": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Sign Up",
        "description": "Sign up givin Credentials Details",
        "operationId": "signUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signIn": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Sign Ip",
        "description": "Sign ip givin email and password",
        "operationId": "signIn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth-management/credentials": {
      "get": {
        "tags": [
          "credential-controller"
        ],
        "summary": "Get all Credentials",
        "description": "Get all credentials ",
        "operationId": "getAllCredentials",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "credential-controller"
        ],
        "summary": "Create new Credentials",
        "description": "Create credential by given data",
        "operationId": "createCredential",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/user-management/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get all Users - ADMIN",
        "description": "Returns all Users",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Create user - ADMIN",
        "description": "Create a user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/auth/check": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Is Auth",
        "description": "Is Token Valid",
        "operationId": "isAuth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/vault-management/vaults/{id}": {
      "get": {
        "tags": [
          "vault-controller"
        ],
        "summary": "Find vault by id - ADMIN / GUEST",
        "description": "Find vault by id",
        "operationId": "getVaultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VaultDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vault-controller"
        ],
        "summary": "Delete vault by id",
        "description": "Delete vault by id",
        "operationId": "deleteVaultById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VaultDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/vault-management/vaults/user": {
      "get": {
        "tags": [
          "vault-controller"
        ],
        "summary": "Get all vault by Principal",
        "description": "Get all vault Principal",
        "operationId": "getAllVaultsByPrincipal",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VaultDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/vault-management/vaults/user/{id}": {
      "get": {
        "tags": [
          "vault-controller"
        ],
        "summary": "Get all vault by User Id - ADMIN",
        "description": "Get all vault by User given",
        "operationId": "getAllVaultsByUserId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VaultDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user-management/users/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get user by Id - ADMIN",
        "description": "Get user by Id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "Delete user by Id",
        "description": "Delete user by his id",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/user-management/user/profile": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Get User By JWT ",
        "description": "Get User By JWT",
        "operationId": "getUserByJwt",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/third-party-management/third-parties/{id}": {
      "get": {
        "tags": [
          "third-party-controller"
        ],
        "summary": "Find Third Party by ID",
        "description": "Get a Third Party by ID",
        "operationId": "getThirdPartyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdPartyDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "third-party-controller"
        ],
        "summary": "Delete Third Party by ID",
        "description": "Delete a Third Party by ID",
        "operationId": "deleteThirdPartyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdPartyDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/revenue-management/revenues/{id}": {
      "get": {
        "tags": [
          "revenue-controller"
        ],
        "summary": "Find Revenue by id",
        "description": "Get a Revenue by ID",
        "operationId": "getRevenueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "revenue-controller"
        ],
        "summary": "Delete revenue by id",
        "description": "Delete revenue by id",
        "operationId": "deleteRevenueById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/revenue-management/revenues/vault/{id}": {
      "get": {
        "tags": [
          "revenue-controller"
        ],
        "summary": "Get revenues by vault",
        "description": "Get revenues by vault",
        "operationId": "getRevenuesByVault",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RevenueDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/operation-management/operations": {
      "get": {
        "tags": [
          "operation-controller"
        ],
        "summary": "Get all Operations - ADMIN",
        "description": "Get all Operations ",
        "operationId": "getAllOperations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperationDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/operation-management/operations/vault/{id}": {
      "get": {
        "tags": [
          "operation-controller"
        ],
        "summary": "Get all Operations by Vault Id",
        "description": "Get all Operations by Vault ",
        "operationId": "getAllOperationsByVaultId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperationDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/operation-management/operations/principal": {
      "get": {
        "tags": [
          "operation-controller"
        ],
        "summary": "Get all Operations by principal",
        "description": "Get all Operations by principal",
        "operationId": "getAllOperationsByPrincipal",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperationDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/expense-management/expenses/{id}": {
      "get": {
        "tags": [
          "expense-controller"
        ],
        "summary": "Find Expense by id",
        "description": "Get a Expense by ID",
        "operationId": "getExpenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "expense-controller"
        ],
        "summary": "Delete expense by id",
        "description": "Delete expense by id",
        "operationId": "deleteExpenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/expense-management/expenses/vault/{id}": {
      "get": {
        "tags": [
          "expense-controller"
        ],
        "summary": "Get expenses by vault",
        "description": "Get expenses by vault",
        "operationId": "getExpensesByVault",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpenseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/category-management/categories/{id}": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "Find Category by id",
        "description": "Get a Category by ID",
        "operationId": "getCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "category-controller"
        ],
        "summary": "Delete category by id",
        "description": "Delete category by id",
        "operationId": "deleteCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "imgProfile": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "GUEST",
              "ADMIN"
            ]
          }
        }
      },
      "VaultDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "userDTO": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "capital": {
            "type": "number"
          },
          "image": {
            "type": "string"
          }
        }
      },
      "ThirdPartyDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "thirdPartyName": {
            "type": "string"
          }
        }
      },
      "CategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "categoryName": {
            "type": "string"
          }
        }
      },
      "RevenueDTO": {
        "required": [
          "amount",
          "categoryDTO",
          "causal",
          "endDate",
          "isProgrammed",
          "startDate",
          "thirdPartyDTO",
          "vaultDTO"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "causal": {
            "type": "string"
          },
          "amount": {
            "minimum": 0,
            "type": "number"
          },
          "isProgrammed": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "vaultDTO": {
            "$ref": "#/components/schemas/VaultDTO"
          },
          "categoryDTO": {
            "$ref": "#/components/schemas/CategoryDTO"
          },
          "thirdPartyDTO": {
            "$ref": "#/components/schemas/ThirdPartyDTO"
          }
        }
      },
      "ExpenseDTO": {
        "required": [
          "amount",
          "categoryDTO",
          "causal",
          "endDate",
          "isProgrammed",
          "startDate",
          "thirdPartyDTO",
          "vaultDTO"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "causal": {
            "type": "string"
          },
          "amount": {
            "minimum": 0,
            "type": "number"
          },
          "isProgrammed": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "vaultDTO": {
            "$ref": "#/components/schemas/VaultDTO"
          },
          "categoryDTO": {
            "$ref": "#/components/schemas/CategoryDTO"
          },
          "thirdPartyDTO": {
            "$ref": "#/components/schemas/ThirdPartyDTO"
          }
        }
      },
      "CredentialDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "userDTO": {
            "$ref": "#/components/schemas/UserDTO"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "jwt": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Category": {
        "required": [
          "categoryName"
        ],
        "type": "object",
        "properties": {
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "categoryName": {
            "type": "string"
          }
        }
      },
      "OperationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "causal": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "isProgrammed": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "vault": {
            "$ref": "#/components/schemas/Vault"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "thirdPartys": {
            "$ref": "#/components/schemas/ThirdParty"
          }
        }
      },
      "ThirdParty": {
        "required": [
          "thirdPartyName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "thirdPartyName": {
            "type": "string"
          }
        }
      },
      "User": {
        "required": [
          "dob",
          "firstName",
          "imgProfile",
          "lastName",
          "role"
        ],
        "type": "object",
        "properties": {
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "imgProfile": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "GUEST",
              "ADMIN"
            ]
          }
        }
      },
      "Vault": {
        "required": [
          "capital",
          "image",
          "name"
        ],
        "type": "object",
        "properties": {
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "capital": {
            "type": "number"
          },
          "image": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "jwtToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}